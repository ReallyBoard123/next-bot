// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MeasurementSession {
  id             Int               @id @default(autoincrement())
  sensorSet      String            // e.g. "32-A" to "32-H"
  personId       Int?              // Optional link to a person
  person         Person?           @relation(fields: [personId], references: [id])
  startedAt      DateTime          @default(now())
  endedAt        DateTime?
  status         MeasurementStatus @default(IN_PROGRESS)
  dataUploaded   Boolean           @default(false)
  steps          MeasurementStep[]
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model MeasurementStep {
  id              Int                @id @default(autoincrement())
  sessionId       Int
  session         MeasurementSession @relation(fields: [sessionId], references: [id])
  stepNumber      Int
  stepType        StepType
  completed       Boolean            @default(false)
  completedAt     DateTime?
  feedback        String?            // Any additional feedback/notes from user
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
}

model Person {
  id                Int                 @id @default(autoincrement())
  name              String
  sensorSet         String              // e.g. "32-A" to "32-H"
  measurementSessions MeasurementSession[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

enum MeasurementStatus {
  IN_PROGRESS
  COMPLETED
  FAILED
}

enum StepType {
  // Start workflow steps - we're keeping the old value for compatibility
  START_DECK_LIGHT
  START_SENSOR_SELECTION  // Keep this for compatibility with existing DB records
  START_REMOVE_SENSORS
  START_PLACE_SENSORS
  
  // New step types
  START_SELECT_PERSON    // New step for person selection
  START_SENSOR_LIGHT     // New step for sensor light check
  
  // End workflow steps
  END_REMOVE_SENSORS
  END_RETURN_SENSORS
  END_CHECK_LIGHTS
  END_DATA_UPLOAD
}